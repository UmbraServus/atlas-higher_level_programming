Matrix divided doctests
=======================
def matrix_divided(matrix, div):
================================
Should return a new matrix with all the elements divided by div and rounded to the nearest 2 decimals.

Examples:

        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
        >>> matrix = [
                [1, 2, 3],
                [4, 5, 6]
            ]
    
    Dividing by positive number 2

        >>>matrix_divided(matrix, 2)
        [[.5, 1, 1.5], [2, 2.5, 3]]

    Dividing by negative number -2

        >>>matrix_divided(matrix, -2)
        [[-.5, -1, -1.5], [-2, -2.5, -3]]

    Dividing by a float(inf)

        >>> matrix_divided(matrix, float('inf'))
	    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Expected Errors Examples:

    >>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

	>>> matrix_divided(matrix, "Hello")
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Matrix with non-number element

	>>> matrix_divided([["hello", 2, 3], [4, 5, 6]], 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix with differ sized rows

	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Matrix with 1 missing arg and 2 missing args
    >>> matrix_divided(matrix)

    >>>matrix_divided()
    