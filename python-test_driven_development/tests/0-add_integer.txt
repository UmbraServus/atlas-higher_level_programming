Examples of add_integer.py
==========================

add_integer(a, b=98) returns addition of two arguments.
It will add two numbers together like using the + sign.
------

Examples:

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5


    >>> add_integer(-1, 2)
    1

works with floats, which will be casted into ints before returning caluclation.

    >>> add_integer(3.2, 2.8)
    5

    >>> add_integer(-3.2, -2.8)
    -5

floats and non-floats can be added together.
    >>> add_integer(2, 3.5)
    5

    >>> add_integer(2, -3.5)
    -1

by default b is 98.
    >>> add_integer(602)
    700

Function will fail if infinity
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

Non-number cases
================

add_integer expects both args to be either floats or ints.
other wise it will raise TypeError:
-----

Examples:

    >>> add_integer(2, "atlas")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer("atlas", 2)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
